
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:svg="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version='1.1'
     baseProfile='full'
     width='1254.000'
     height='1476.000'>
    <defs>
        <style><![CDATA[
            line
            {
              stroke: black;
            }
            line.separator
            {
              stroke:       black;
              stroke-width: 1;
            }
            marker
            {
              fill: white;
            }
            path
            {
              fill:   white;
              stroke: black;
            }
            path.implementation
            {
              fill:             none;
              stroke-dasharray: 5,5;
              stroke-width:     3;
            }
            path.inheritance
            {
              fill:         none;
              stroke-width: 3;
            }
            rect
            {
              fill:         none;
              stroke:       black;
              stroke-width: 2;
            }
            rect.externalClass
            {
              fill:         #D0D0D0;
              fill-opacity: 0.8;
            }
            rect.focusClass
            {
              fill:         #FFFFF9;
              fill-opacity: 0.8;
            }
            rect.otherClass
            {
              fill:         #F0E68C;
              fill-opacity: 0.8;
            }
            rect.template
            {
              fill:             #FFFFFF;
              fill-opacity:     1.0;
              stroke-dasharray: 3,3;
            }
            text
            {
              font-family: monospace;
              font-size:   10px;
              font-weight: bold;
            }
            text.abstract
            {
              font-style: italic;
            }
            text.final
            {
              text-decoration: underline;
            }
            text.static
            {
              font-weight: normal;
            }
            text.stereotype
            {
              font-size:   8px;
              font-weight: normal;
            }
            ]]></style>
        <marker id='inheritance'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <marker id='implementation'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <clipPath id='ID000001'>
            <rect class='focusClass'
                  height='282.000'
                  width='988.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.javadoc.umlgraph.UMLTypeElement'>
            <g>
                <g class='focusClass'
                   clip-path='url(#ID000001)'>
                    <rect x='0.000'
                          y='0.000'
                          width='988.000'
                          height='282.000'
                          class='focusClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='988.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='452.000'
                          y='13.000'>UMLTypeElement</text>
                    <line x1='0.000'
                          y1='78.000'
                          x2='988.000'
                          y2='78.000'
                          class='separator'/>
                    <text y='30.000'
                          class='static final'>+ EMPTY_UMLTypeElement_ARRAY:org.tquadrat.foundation.javadoc.umlgraph.UMLTypeElement[]</text>
                    <text y='41.000'
                          class='final'>- m_ChildTypes:java.util.Set&lt;org.tquadrat.foundation.javadoc.umlgraph.UMLTypeElement&gt;</text>
                    <text y='52.000'
                          class='final'>- m_IsIncludedInOutput:boolean</text>
                    <text y='63.000'
                          class='final'>- m_TypeUtils:javax.lang.model.util.Types</text>
                    <text y='74.000'
                          class='final'>- m_Wrapped:javax.lang.model.element.TypeElement</text>
                    <text x='5.000'
                          y='91.000'>+ UMLTypeElement(element:javax.lang.model.element.TypeElement,isIncluded:boolean,typeUtils:javax.lang.model.util.Types)</text>
                    <text x='5.000'
                          y='102.000'>+ addChildType(child:org.tquadrat.foundation.javadoc.umlgraph.UMLTypeElement):void</text>
                    <text x='5.000'
                          y='113.000'>+ createSymbol(layout:org.tquadrat.foundation.javadoc.umlgraph.UMLGraphLayout,details:int,isFocusClass:boolean):org.tquadrat.foundation.javadoc.umlgraph.TypeSymbol</text>
                    <text x='5.000'
                          y='124.000'>~ determineStereotypes():java.lang.String[]</text>
                    <text x='5.000'
                          y='135.000'>+ equals(obj:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='146.000'>~ getAttributes(apiOnly:boolean):java.util.List&lt;org.tquadrat.foundation.javadoc.umlgraph.UMLVariableElement&gt;</text>
                    <text x='5.000'
                          y='157.000'>+ getChildTypes():org.tquadrat.foundation.javadoc.umlgraph.UMLTypeElement[]</text>
                    <text x='5.000'
                          y='168.000'>+ getConstructors(apiOnly:boolean):java.util.List&lt;org.tquadrat.foundation.javadoc.umlgraph.UMLConstructorElement&gt;</text>
                    <text x='5.000'
                          y='179.000'>+ getInterfaces():java.util.List&lt;? extends javax.lang.model.type.TypeMirror&gt;</text>
                    <text x='5.000'
                          y='190.000'>+ getMethods(apiOnly:boolean):java.util.List&lt;org.tquadrat.foundation.javadoc.umlgraph.UMLMethodElement&gt;</text>
                    <text x='5.000'
                          y='201.000'>+ getNestingKind():javax.lang.model.element.NestingKind</text>
                    <text x='5.000'
                          y='212.000'>+ getQualifiedName():javax.lang.model.element.Name</text>
                    <text x='5.000'
                          y='223.000'>+ getSuperclass():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='234.000'>+ getTypeParameters():java.util.List&lt;? extends javax.lang.model.element.TypeParameterElement&gt;</text>
                    <text x='5.000'
                          y='245.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='256.000'>+ isAbstract():boolean</text>
                    <text x='5.000'
                          y='267.000'>+ isClass():boolean</text>
                    <text x='5.000'
                          y='278.000'>+ isInterface():boolean</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000002'>
            <rect class='otherClass'
                  height='227.000'
                  width='562.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.javadoc.umlgraph.UMLElement'>
            <g>
                <g clip-path='url(#ID000002)'>
                    <rect x='0.000'
                          y='0.000'
                          width='562.000'
                          height='227.000'
                          class='otherClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='562.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='266.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Type&#xBB;</text>
                    <text x='251.000'
                          y='24.000'
                          class='abstract'>UMLElement</text>
                    <line x1='0.000'
                          y1='56.000'
                          x2='562.000'
                          y2='56.000'
                          class='separator'/>
                    <text y='41.000'
                          class='static final'>+ EMPTY_UMLElement_ARRAY:org.tquadrat.foundation.javadoc.umlgraph.UMLElement[]</text>
                    <text y='52.000'
                          class='final'>- m_Wrapped:javax.lang.model.element.Element</text>
                    <text x='5.000'
                          y='69.000'># UMLElement(element:javax.lang.model.element.Element)</text>
                    <text x='5.000'
                          y='80.000'>+ accept(visitor:javax.lang.model.element.ElementVisitor&lt;R,P&gt;,payload:P):R</text>
                    <text x='5.000'
                          y='91.000'>+ asType():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='102.000'>+ getAnnotation(annotationType:java.lang.Class&lt;A&gt;):A</text>
                    <text x='5.000'
                          y='113.000'>+ getAnnotationsByType(annotationType:java.lang.Class&lt;A&gt;):A[]</text>
                    <text x='5.000'
                          y='124.000'>+ getAnnotationMirrors():java.util.List&lt;? extends javax.lang.model.element.AnnotationMirror&gt;</text>
                    <text x='5.000'
                          y='135.000'>+ getEnclosedElements():java.util.List&lt;? extends javax.lang.model.element.Element&gt;</text>
                    <text x='5.000'
                          y='146.000'>+ getEnclosingElement():javax.lang.model.element.Element</text>
                    <text x='5.000'
                          y='157.000'>+ getKind():javax.lang.model.element.ElementKind</text>
                    <text x='5.000'
                          y='168.000'>+ getModifiers():java.util.Set&lt;javax.lang.model.element.Modifier&gt;</text>
                    <text x='5.000'
                          y='179.000'>+ getSimpleName():javax.lang.model.element.Name</text>
                    <text x='5.000'
                          y='190.000'
                          class='static'>+ isAPI(element:javax.lang.model.element.Element):boolean</text>
                    <text x='5.000'
                          y='201.000'
                          class='static'>+ isAttribute(element:javax.lang.model.element.Element):boolean</text>
                    <text x='5.000'
                          y='212.000'
                          class='static'>+ isConstructor(element:javax.lang.model.element.Element):boolean</text>
                    <text x='5.000'
                          y='223.000'
                          class='static'>+ isMethod(element:javax.lang.model.element.Element):boolean</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000003'>
            <rect class='externalClass'
                  height='172.000'
                  width='592.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javax.lang.model.element.TypeElement'>
            <g>
                <g clip-path='url(#ID000003)'>
                    <rect x='0.000'
                          y='0.000'
                          width='592.000'
                          height='172.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='592.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='269.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='263.000'
                          y='24.000'
                          class='abstract'>TypeElement</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='592.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ asType():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='69.000'
                          class='abstract'>+ getEnclosedElements():java.util.List&lt;? extends javax.lang.model.element.Element&gt;</text>
                    <text x='5.000'
                          y='80.000'
                          class='abstract'>+ getNestingKind():javax.lang.model.element.NestingKind</text>
                    <text x='5.000'
                          y='91.000'
                          class='abstract'>+ getQualifiedName():javax.lang.model.element.Name</text>
                    <text x='5.000'
                          y='102.000'
                          class='abstract'>+ getSimpleName():javax.lang.model.element.Name</text>
                    <text x='5.000'
                          y='113.000'
                          class='abstract'>+ getSuperclass():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='124.000'
                          class='abstract'>+ getInterfaces():java.util.List&lt;? extends javax.lang.model.type.TypeMirror&gt;</text>
                    <text x='5.000'
                          y='135.000'
                          class='abstract'>+ getTypeParameters():java.util.List&lt;? extends javax.lang.model.element.TypeParameterElement&gt;</text>
                    <text x='5.000'
                          y='146.000'>&#x2A22; getRecordComponents():java.util.List&lt;? extends javax.lang.model.element.RecordComponentElement&gt;</text>
                    <text x='5.000'
                          y='157.000'>&#x2A22; getPermittedSubclasses():java.util.List&lt;? extends javax.lang.model.type.TypeMirror&gt;</text>
                    <text x='5.000'
                          y='168.000'
                          class='abstract'>+ getEnclosingElement():javax.lang.model.element.Element</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000004'>
            <rect class='externalClass'
                  height='172.000'
                  width='244.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.lang.Object'>
            <g>
                <g clip-path='url(#ID000004)'>
                    <rect x='0.000'
                          y='0.000'
                          width='244.000'
                          height='172.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='244.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='104.000'
                          y='13.000'>Object</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='244.000'
                          y2='34.000'
                          class='separator'/>
                    <text x='5.000'
                          y='30.000'/>
                    <text x='5.000'
                          y='47.000'>+ Object()</text>
                    <text x='5.000'
                          y='58.000'>+ getClass():java.lang.Class&lt;?&gt;</text>
                    <text x='5.000'
                          y='69.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='80.000'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='91.000'># clone():java.lang.Object</text>
                    <text x='5.000'
                          y='102.000'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='113.000'>+ notify():void</text>
                    <text x='5.000'
                          y='124.000'>+ notifyAll():void</text>
                    <text x='5.000'
                          y='135.000'>+ wait():void</text>
                    <text x='5.000'
                          y='146.000'>+ wait(arg0:long):void</text>
                    <text x='5.000'
                          y='157.000'>+ wait(arg0:long,arg1:int):void</text>
                    <text x='5.000'
                          y='168.000'># finalize():void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000005'>
            <rect class='externalClass'
                  height='183.000'
                  width='562.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javax.lang.model.element.Element'>
            <g>
                <g clip-path='url(#ID000005)'>
                    <rect x='0.000'
                          y='0.000'
                          width='562.000'
                          height='183.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='562.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='254.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='260.000'
                          y='24.000'
                          class='abstract'>Element</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='562.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ asType():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='69.000'
                          class='abstract'>+ getKind():javax.lang.model.element.ElementKind</text>
                    <text x='5.000'
                          y='80.000'
                          class='abstract'>+ getModifiers():java.util.Set&lt;javax.lang.model.element.Modifier&gt;</text>
                    <text x='5.000'
                          y='91.000'
                          class='abstract'>+ getSimpleName():javax.lang.model.element.Name</text>
                    <text x='5.000'
                          y='102.000'
                          class='abstract'>+ getEnclosingElement():javax.lang.model.element.Element</text>
                    <text x='5.000'
                          y='113.000'
                          class='abstract'>+ getEnclosedElements():java.util.List&lt;? extends javax.lang.model.element.Element&gt;</text>
                    <text x='5.000'
                          y='124.000'
                          class='abstract'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='135.000'
                          class='abstract'>+ hashCode():int</text>
                    <text x='5.000'
                          y='146.000'
                          class='abstract'>+ getAnnotationMirrors():java.util.List&lt;? extends javax.lang.model.element.AnnotationMirror&gt;</text>
                    <text x='5.000'
                          y='157.000'
                          class='abstract'>+ getAnnotation(arg0:java.lang.Class&lt;A&gt;):A</text>
                    <text x='5.000'
                          y='168.000'
                          class='abstract'>+ getAnnotationsByType(arg0:java.lang.Class&lt;A&gt;):A[]</text>
                    <text x='5.000'
                          y='179.000'
                          class='abstract'>+ accept(arg0:javax.lang.model.element.ElementVisitor&lt;R,P&gt;,arg1:P):R</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000006'>
            <rect class='externalClass'
                  height='183.000'
                  width='562.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <clipPath id='ID000007'>
            <rect class='externalClass'
                  height='62.000'
                  width='568.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javax.lang.model.element.Parameterizable'>
            <g>
                <g clip-path='url(#ID000007)'>
                    <rect x='0.000'
                          y='0.000'
                          width='568.000'
                          height='62.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='568.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='257.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='239.000'
                          y='24.000'
                          class='abstract'>Parameterizable</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='568.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ getTypeParameters():java.util.List&lt;? extends javax.lang.model.element.TypeParameterElement&gt;</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000008'>
            <rect class='externalClass'
                  height='62.000'
                  width='310.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javax.lang.model.element.QualifiedNameable'>
            <g>
                <g clip-path='url(#ID000008)'>
                    <rect x='0.000'
                          y='0.000'
                          width='310.000'
                          height='62.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='310.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='128.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='104.000'
                          y='24.000'
                          class='abstract'>QualifiedNameable</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='310.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ getQualifiedName():javax.lang.model.element.Name</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000009'>
            <rect class='externalClass'
                  height='84.000'
                  width='562.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javax.lang.model.AnnotatedConstruct'>
            <g>
                <g clip-path='url(#ID000009)'>
                    <rect x='0.000'
                          y='0.000'
                          width='562.000'
                          height='84.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='562.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='254.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='227.000'
                          y='24.000'
                          class='abstract'>AnnotatedConstruct</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='562.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ getAnnotationMirrors():java.util.List&lt;? extends javax.lang.model.element.AnnotationMirror&gt;</text>
                    <text x='5.000'
                          y='69.000'
                          class='abstract'>+ getAnnotation(arg0:java.lang.Class&lt;A&gt;):A</text>
                    <text x='5.000'
                          y='80.000'
                          class='abstract'>+ getAnnotationsByType(arg0:java.lang.Class&lt;A&gt;):A[]</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000010'>
            <rect class='externalClass'
                  height='183.000'
                  width='562.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <clipPath id='ID000011'>
            <rect class='externalClass'
                  height='183.000'
                  width='562.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
    </defs>
    <path class='inheritance'
          d='M602.000,1069.000 c0.000,-85.000,-288.500,0.000,-288.500,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='implementation'
          d='M652.000,1069.000 c0.000,-140.000,288.500,0.000,288.500,-140.000 v-15'
          marker-end='url(#implementation)'/>
    <path class='inheritance'
          d='M288.500,742.000 c0.000,-530.000,25.000,0.000,25.000,-530.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='implementation'
          d='M338.500,742.000 c0.000,-247.000,273.500,0.000,273.500,-247.000 v-15'
          marker-end='url(#implementation)'/>
    <path class='inheritance'
          d='M940.500,742.000 c0.000,-247.000,-298.500,0.000,-298.500,-247.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M890.500,742.000 c0.000,-85.000,-577.000,0.000,-577.000,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M990.500,742.000 c0.000,-85.000,-50.000,0.000,-50.000,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M627.000,297.000 c0.000,-173.000,313.500,0.000,313.500,-173.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M313.500,580.000 c0.000,-85.000,268.500,0.000,268.500,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M940.500,580.000 c0.000,-85.000,-268.500,0.000,-268.500,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <use x='191.500'
         y='25.000'
         xlink:href='#java.lang.Object'/>
    <use x='659.500'
         y='25.000'
         xlink:href='#javax.lang.model.AnnotatedConstruct'/>
    <use x='346.000'
         y='297.000'
         xlink:href='#javax.lang.model.element.Element'/>
    <use x='29.500'
         y='580.000'
         xlink:href='#javax.lang.model.element.Parameterizable'/>
    <use x='785.500'
         y='580.000'
         xlink:href='#javax.lang.model.element.QualifiedNameable'/>
    <use x='32.500'
         y='742.000'
         xlink:href='#org.tquadrat.foundation.javadoc.umlgraph.UMLElement'/>
    <use x='644.500'
         y='742.000'
         xlink:href='#javax.lang.model.element.TypeElement'/>
    <use x='133.000'
         y='1069.000'
         xlink:href='#org.tquadrat.foundation.javadoc.umlgraph.UMLTypeElement'/>
</svg>