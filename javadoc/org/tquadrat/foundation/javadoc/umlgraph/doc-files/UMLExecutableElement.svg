
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:svg="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version='1.1'
     baseProfile='full'
     width='1260.000'
     height='1682.000'>
    <defs>
        <style><![CDATA[
            line
            {
              stroke: black;
            }
            line.separator
            {
              stroke:       black;
              stroke-width: 1;
            }
            marker
            {
              fill: white;
            }
            path
            {
              fill:   white;
              stroke: black;
            }
            path.implementation
            {
              fill:             none;
              stroke-dasharray: 5,5;
              stroke-width:     3;
            }
            path.inheritance
            {
              fill:         none;
              stroke-width: 3;
            }
            rect
            {
              fill:         none;
              stroke:       black;
              stroke-width: 2;
            }
            rect.externalClass
            {
              fill:         #D0D0D0;
              fill-opacity: 0.8;
            }
            rect.focusClass
            {
              fill:         #FFFFF9;
              fill-opacity: 0.8;
            }
            rect.otherClass
            {
              fill:         #F0E68C;
              fill-opacity: 0.8;
            }
            rect.template
            {
              fill:             #FFFFFF;
              fill-opacity:     1.0;
              stroke-dasharray: 3,3;
            }
            text
            {
              font-family: monospace;
              font-size:   10px;
              font-weight: bold;
            }
            text.abstract
            {
              font-style: italic;
            }
            text.final
            {
              text-decoration: underline;
            }
            text.static
            {
              font-weight: normal;
            }
            text.stereotype
            {
              font-size:   8px;
              font-weight: normal;
            }
            ]]></style>
        <marker id='inheritance'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <marker id='implementation'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <clipPath id='ID000001'>
            <rect class='focusClass'
                  height='194.000'
                  width='598.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.javadoc.umlgraph.UMLExecutableElement'>
            <g>
                <g class='focusClass'
                   clip-path='url(#ID000001)'>
                    <rect x='0.000'
                          y='0.000'
                          width='598.000'
                          height='194.000'
                          class='focusClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='598.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='284.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Type&#xBB;</text>
                    <text x='239.000'
                          y='24.000'
                          class='abstract'>UMLExecutableElement</text>
                    <line x1='0.000'
                          y1='67.000'
                          x2='598.000'
                          y2='67.000'
                          class='separator'/>
                    <text y='41.000'
                          class='static final'>+ EMPTY_UMLExecutableElement_ARRAY:org.tquadrat.foundation.javadoc.umlgraph.UMLExecutableElement[]</text>
                    <text y='52.000'
                          class='final'>- m_UMLParameters:org.tquadrat.foundation.lang.Lazy&lt;java.lang.String&gt;</text>
                    <text y='63.000'
                          class='final'>- m_Wrapped:javax.lang.model.element.ExecutableElement</text>
                    <text x='5.000'
                          y='80.000'># UMLExecutableElement(element:javax.lang.model.element.ExecutableElement)</text>
                    <text x='5.000'
                          y='91.000'>+ getDefaultValue():javax.lang.model.element.AnnotationValue</text>
                    <text x='5.000'
                          y='102.000'>+ getParameters():java.util.List&lt;? extends javax.lang.model.element.VariableElement&gt;</text>
                    <text x='5.000'
                          y='113.000'>+ getParametersList():java.lang.String</text>
                    <text x='5.000'
                          y='124.000'>+ getReceiverType():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='135.000'>+ getReturnType():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='146.000'>+ getThrownTypes():java.util.List&lt;? extends javax.lang.model.type.TypeMirror&gt;</text>
                    <text x='5.000'
                          y='157.000'>+ getTypeParameters():java.util.List&lt;? extends javax.lang.model.element.TypeParameterElement&gt;</text>
                    <text x='5.000'
                          y='168.000'>+ isDefault():boolean</text>
                    <text x='5.000'
                          y='179.000'>+ isVarArgs():boolean</text>
                    <text x='5.000'
                          y='190.000'>- retrieveParameters():java.lang.String</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000002'>
            <rect class='otherClass'
                  height='62.000'
                  width='610.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.javadoc.umlgraph.UMLConstructorElement'>
            <g>
                <g clip-path='url(#ID000002)'>
                    <rect x='0.000'
                          y='0.000'
                          width='610.000'
                          height='62.000'
                          class='otherClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='610.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='242.000'
                          y='13.000'>UMLConstructorElement</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='610.000'
                          y2='34.000'
                          class='separator'/>
                    <text y='30.000'
                          class='static final'>+ EMPTY_UMLConstructorElement_ARRAY:org.tquadrat.foundation.javadoc.umlgraph.UMLConstructorElement[]</text>
                    <text x='5.000'
                          y='47.000'>+ UMLConstructorElement(element:javax.lang.model.element.ExecutableElement)</text>
                    <text x='5.000'
                          y='58.000'>+ toString():java.lang.String</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000003'>
            <rect class='otherClass'
                  height='95.000'
                  width='550.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.javadoc.umlgraph.UMLMethodElement'>
            <g>
                <g clip-path='url(#ID000003)'>
                    <rect x='0.000'
                          y='0.000'
                          width='550.000'
                          height='95.000'
                          class='otherClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='550.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='227.000'
                          y='13.000'>UMLMethodElement</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='550.000'
                          y2='34.000'
                          class='separator'/>
                    <text y='30.000'
                          class='static final'>+ EMPTY_UMLMethodElement_ARRAY:org.tquadrat.foundation.javadoc.umlgraph.UMLMethodElement[]</text>
                    <text x='5.000'
                          y='47.000'>+ UMLMethodElement(element:javax.lang.model.element.ExecutableElement)</text>
                    <text x='5.000'
                          y='58.000'>+ isAbstract():boolean</text>
                    <text x='5.000'
                          y='69.000'>+ isStatic():boolean</text>
                    <text x='5.000'
                          y='80.000'># renderSVGText():org.tquadrat.foundation.svg.SVGText</text>
                    <text x='5.000'
                          y='91.000'>+ toString():java.lang.String</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000004'>
            <rect class='otherClass'
                  height='128.000'
                  width='550.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.javadoc.umlgraph.UMLMemberElement'>
            <g>
                <g clip-path='url(#ID000004)'>
                    <rect x='0.000'
                          y='0.000'
                          width='550.000'
                          height='128.000'
                          class='otherClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='550.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='260.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Type&#xBB;</text>
                    <text x='227.000'
                          y='24.000'
                          class='abstract'>UMLMemberElement</text>
                    <line x1='0.000'
                          y1='56.000'
                          x2='550.000'
                          y2='56.000'
                          class='separator'/>
                    <text y='41.000'
                          class='static final'>+ EMPTY_UMLMemberElement_ARRAY:org.tquadrat.foundation.javadoc.umlgraph.UMLMemberElement[]</text>
                    <text y='52.000'
                          class='final'>- m_Text:org.tquadrat.foundation.lang.Lazy&lt;org.tquadrat.foundation.svg.SVGText&gt;</text>
                    <text x='5.000'
                          y='69.000'># UMLMemberElement(element:javax.lang.model.element.Element)</text>
                    <text x='5.000'
                          y='80.000'># determineVisibility():java.lang.String</text>
                    <text x='5.000'
                          y='91.000'>+ getEnclosingElement():javax.lang.model.element.TypeElement</text>
                    <text x='5.000'
                          y='102.000'># renderSVGText():org.tquadrat.foundation.svg.SVGText</text>
                    <text x='5.000'
                          y='113.000'
                          class='abstract'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='124.000'>+ toText():org.tquadrat.foundation.svg.SVGText</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000005'>
            <rect class='externalClass'
                  height='161.000'
                  width='568.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javax.lang.model.element.ExecutableElement'>
            <g>
                <g clip-path='url(#ID000005)'>
                    <rect x='0.000'
                          y='0.000'
                          width='568.000'
                          height='161.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='568.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='257.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='233.000'
                          y='24.000'
                          class='abstract'>ExecutableElement</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='568.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ asType():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='69.000'
                          class='abstract'>+ getTypeParameters():java.util.List&lt;? extends javax.lang.model.element.TypeParameterElement&gt;</text>
                    <text x='5.000'
                          y='80.000'
                          class='abstract'>+ getReturnType():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='91.000'
                          class='abstract'>+ getParameters():java.util.List&lt;? extends javax.lang.model.element.VariableElement&gt;</text>
                    <text x='5.000'
                          y='102.000'
                          class='abstract'>+ getReceiverType():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='113.000'
                          class='abstract'>+ isVarArgs():boolean</text>
                    <text x='5.000'
                          y='124.000'
                          class='abstract'>+ isDefault():boolean</text>
                    <text x='5.000'
                          y='135.000'
                          class='abstract'>+ getThrownTypes():java.util.List&lt;? extends javax.lang.model.type.TypeMirror&gt;</text>
                    <text x='5.000'
                          y='146.000'
                          class='abstract'>+ getDefaultValue():javax.lang.model.element.AnnotationValue</text>
                    <text x='5.000'
                          y='157.000'
                          class='abstract'>+ getSimpleName():javax.lang.model.element.Name</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000006'>
            <rect class='otherClass'
                  height='227.000'
                  width='562.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.javadoc.umlgraph.UMLElement'>
            <g>
                <g clip-path='url(#ID000006)'>
                    <rect x='0.000'
                          y='0.000'
                          width='562.000'
                          height='227.000'
                          class='otherClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='562.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='266.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Type&#xBB;</text>
                    <text x='251.000'
                          y='24.000'
                          class='abstract'>UMLElement</text>
                    <line x1='0.000'
                          y1='56.000'
                          x2='562.000'
                          y2='56.000'
                          class='separator'/>
                    <text y='41.000'
                          class='static final'>+ EMPTY_UMLElement_ARRAY:org.tquadrat.foundation.javadoc.umlgraph.UMLElement[]</text>
                    <text y='52.000'
                          class='final'>- m_Wrapped:javax.lang.model.element.Element</text>
                    <text x='5.000'
                          y='69.000'># UMLElement(element:javax.lang.model.element.Element)</text>
                    <text x='5.000'
                          y='80.000'>+ accept(visitor:javax.lang.model.element.ElementVisitor&lt;R,P&gt;,payload:P):R</text>
                    <text x='5.000'
                          y='91.000'>+ asType():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='102.000'>+ getAnnotation(annotationType:java.lang.Class&lt;A&gt;):A</text>
                    <text x='5.000'
                          y='113.000'>+ getAnnotationsByType(annotationType:java.lang.Class&lt;A&gt;):A[]</text>
                    <text x='5.000'
                          y='124.000'>+ getAnnotationMirrors():java.util.List&lt;? extends javax.lang.model.element.AnnotationMirror&gt;</text>
                    <text x='5.000'
                          y='135.000'>+ getEnclosedElements():java.util.List&lt;? extends javax.lang.model.element.Element&gt;</text>
                    <text x='5.000'
                          y='146.000'>+ getEnclosingElement():javax.lang.model.element.Element</text>
                    <text x='5.000'
                          y='157.000'>+ getKind():javax.lang.model.element.ElementKind</text>
                    <text x='5.000'
                          y='168.000'>+ getModifiers():java.util.Set&lt;javax.lang.model.element.Modifier&gt;</text>
                    <text x='5.000'
                          y='179.000'>+ getSimpleName():javax.lang.model.element.Name</text>
                    <text x='5.000'
                          y='190.000'
                          class='static'>+ isAPI(element:javax.lang.model.element.Element):boolean</text>
                    <text x='5.000'
                          y='201.000'
                          class='static'>+ isAttribute(element:javax.lang.model.element.Element):boolean</text>
                    <text x='5.000'
                          y='212.000'
                          class='static'>+ isConstructor(element:javax.lang.model.element.Element):boolean</text>
                    <text x='5.000'
                          y='223.000'
                          class='static'>+ isMethod(element:javax.lang.model.element.Element):boolean</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000007'>
            <rect class='externalClass'
                  height='183.000'
                  width='562.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javax.lang.model.element.Element'>
            <g>
                <g clip-path='url(#ID000007)'>
                    <rect x='0.000'
                          y='0.000'
                          width='562.000'
                          height='183.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='562.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='254.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='260.000'
                          y='24.000'
                          class='abstract'>Element</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='562.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ asType():javax.lang.model.type.TypeMirror</text>
                    <text x='5.000'
                          y='69.000'
                          class='abstract'>+ getKind():javax.lang.model.element.ElementKind</text>
                    <text x='5.000'
                          y='80.000'
                          class='abstract'>+ getModifiers():java.util.Set&lt;javax.lang.model.element.Modifier&gt;</text>
                    <text x='5.000'
                          y='91.000'
                          class='abstract'>+ getSimpleName():javax.lang.model.element.Name</text>
                    <text x='5.000'
                          y='102.000'
                          class='abstract'>+ getEnclosingElement():javax.lang.model.element.Element</text>
                    <text x='5.000'
                          y='113.000'
                          class='abstract'>+ getEnclosedElements():java.util.List&lt;? extends javax.lang.model.element.Element&gt;</text>
                    <text x='5.000'
                          y='124.000'
                          class='abstract'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='135.000'
                          class='abstract'>+ hashCode():int</text>
                    <text x='5.000'
                          y='146.000'
                          class='abstract'>+ getAnnotationMirrors():java.util.List&lt;? extends javax.lang.model.element.AnnotationMirror&gt;</text>
                    <text x='5.000'
                          y='157.000'
                          class='abstract'>+ getAnnotation(arg0:java.lang.Class&lt;A&gt;):A</text>
                    <text x='5.000'
                          y='168.000'
                          class='abstract'>+ getAnnotationsByType(arg0:java.lang.Class&lt;A&gt;):A[]</text>
                    <text x='5.000'
                          y='179.000'
                          class='abstract'>+ accept(arg0:javax.lang.model.element.ElementVisitor&lt;R,P&gt;,arg1:P):R</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000008'>
            <rect class='externalClass'
                  height='62.000'
                  width='568.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javax.lang.model.element.Parameterizable'>
            <g>
                <g clip-path='url(#ID000008)'>
                    <rect x='0.000'
                          y='0.000'
                          width='568.000'
                          height='62.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='568.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='257.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='239.000'
                          y='24.000'
                          class='abstract'>Parameterizable</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='568.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ getTypeParameters():java.util.List&lt;? extends javax.lang.model.element.TypeParameterElement&gt;</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000009'>
            <rect class='externalClass'
                  height='172.000'
                  width='244.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.lang.Object'>
            <g>
                <g clip-path='url(#ID000009)'>
                    <rect x='0.000'
                          y='0.000'
                          width='244.000'
                          height='172.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='244.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='104.000'
                          y='13.000'>Object</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='244.000'
                          y2='34.000'
                          class='separator'/>
                    <text x='5.000'
                          y='30.000'/>
                    <text x='5.000'
                          y='47.000'>+ Object()</text>
                    <text x='5.000'
                          y='58.000'>+ getClass():java.lang.Class&lt;?&gt;</text>
                    <text x='5.000'
                          y='69.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='80.000'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='91.000'># clone():java.lang.Object</text>
                    <text x='5.000'
                          y='102.000'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='113.000'>+ notify():void</text>
                    <text x='5.000'
                          y='124.000'>+ notifyAll():void</text>
                    <text x='5.000'
                          y='135.000'>+ wait():void</text>
                    <text x='5.000'
                          y='146.000'>+ wait(arg0:long):void</text>
                    <text x='5.000'
                          y='157.000'>+ wait(arg0:long,arg1:int):void</text>
                    <text x='5.000'
                          y='168.000'># finalize():void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000010'>
            <rect class='externalClass'
                  height='183.000'
                  width='562.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <clipPath id='ID000011'>
            <rect class='externalClass'
                  height='84.000'
                  width='562.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='javax.lang.model.AnnotatedConstruct'>
            <g>
                <g clip-path='url(#ID000011)'>
                    <rect x='0.000'
                          y='0.000'
                          width='562.000'
                          height='84.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='562.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='254.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='227.000'
                          y='24.000'
                          class='abstract'>AnnotatedConstruct</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='562.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ getAnnotationMirrors():java.util.List&lt;? extends javax.lang.model.element.AnnotationMirror&gt;</text>
                    <text x='5.000'
                          y='69.000'
                          class='abstract'>+ getAnnotation(arg0:java.lang.Class&lt;A&gt;):A</text>
                    <text x='5.000'
                          y='80.000'
                          class='abstract'>+ getAnnotationsByType(arg0:java.lang.Class&lt;A&gt;):A[]</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000012'>
            <rect class='externalClass'
                  height='183.000'
                  width='562.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
    </defs>
    <path class='inheritance'
          d='M315.000,1462.000 c0.000,-85.000,300.000,0.000,300.000,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M945.000,1462.000 c0.000,-85.000,-300.000,0.000,-300.000,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M605.000,1168.000 c0.000,-118.000,-290.000,0.000,-290.000,-118.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='implementation'
          d='M655.000,1168.000 c0.000,-85.000,290.000,0.000,290.000,-85.000 v-15'
          marker-end='url(#implementation)'/>
    <path class='inheritance'
          d='M315.000,907.000 L315.000,807.000'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M920.000,907.000 c0.000,-412.000,-290.000,0.000,-290.000,-412.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M970.000,907.000 c0.000,-250.000,-25.000,0.000,-25.000,-250.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M290.000,580.000 c0.000,-368.000,25.000,0.000,25.000,-368.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='implementation'
          d='M340.000,580.000 c0.000,-85.000,260.000,0.000,260.000,-85.000 v-15'
          marker-end='url(#implementation)'/>
    <path class='inheritance'
          d='M630.000,297.000 c0.000,-173.000,315.000,0.000,315.000,-173.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M945.000,580.000 c0.000,-85.000,-285.000,0.000,-285.000,-85.000 v-15'
          marker-end='url(#inheritance)'/>
    <use x='193.000'
         y='25.000'
         xlink:href='#java.lang.Object'/>
    <use x='664.000'
         y='25.000'
         xlink:href='#javax.lang.model.AnnotatedConstruct'/>
    <use x='349.000'
         y='297.000'
         xlink:href='#javax.lang.model.element.Element'/>
    <use x='34.000'
         y='580.000'
         xlink:href='#org.tquadrat.foundation.javadoc.umlgraph.UMLElement'/>
    <use x='661.000'
         y='580.000'
         xlink:href='#javax.lang.model.element.Parameterizable'/>
    <use x='40.000'
         y='907.000'
         xlink:href='#org.tquadrat.foundation.javadoc.umlgraph.UMLMemberElement'/>
    <use x='661.000'
         y='907.000'
         xlink:href='#javax.lang.model.element.ExecutableElement'/>
    <use x='331.000'
         y='1168.000'
         xlink:href='#org.tquadrat.foundation.javadoc.umlgraph.UMLExecutableElement'/>
    <use x='10.000'
         y='1462.000'
         xlink:href='#org.tquadrat.foundation.javadoc.umlgraph.UMLConstructorElement'/>
    <use x='670.000'
         y='1462.000'
         xlink:href='#org.tquadrat.foundation.javadoc.umlgraph.UMLMethodElement'/>
</svg>